{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei Gabor\\\\Desktop\\\\UNI\\\\3rd YEAR\\\\Mobile\\\\Labs\\\\cars-app\\\\src\\\\cars\\\\CarList.tsx\";\nimport { IonChip, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonItem, IonLabel, IonList, IonLoading, IonPage, IonSearchbar, IonSelect, IonSelectOption, IonToast, IonToolbar } from \"@ionic/react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CarContext } from \"./CarProvider\";\nimport Car from \"./Car\";\nimport { add } from 'ionicons/icons';\nimport { AuthContext } from \"../auth\";\nimport { getLogger } from '../core';\nimport { Network } from '@capacitor/core';\nconst log = getLogger('CarList');\nconst offset = 10;\n\nconst CarList = ({\n  history\n}) => {\n  const {\n    logout\n  } = useContext(AuthContext);\n  const {\n    cars,\n    fetching,\n    fetchingError\n  } = useContext(CarContext);\n  const [disableInfiniteScroll, setDisabledInfiniteScroll] = useState(false);\n  const [visibleCars, setVisibleCars] = useState([]);\n  const [page, setPage] = useState(offset);\n  const [filter, setFilter] = useState(undefined);\n  const [search, setSearch] = useState(\"\");\n  const [status, setStatus] = useState(true);\n  const {\n    savedOffline,\n    setSavedOffline\n  } = useContext(CarContext);\n  Network.getStatus().then(status => setStatus(status.connected));\n  Network.addListener('networkStatusChange', status => {\n    setStatus(status.connected);\n  });\n  const toBeAvailable = [\"Yes\", \"No\"];\n  useEffect(() => {\n    if ((cars === null || cars === void 0 ? void 0 : cars.length) && (cars === null || cars === void 0 ? void 0 : cars.length) > 0) {\n      setPage(offset);\n      fetchData();\n      console.log(cars);\n    }\n  }, [cars]);\n  useEffect(() => {\n    // if (cars && filter) {\n    if (cars) {\n      setVisibleCars(cars.filter(each => each.available === filter));\n    }\n  }, [filter]);\n  useEffect(() => {\n    if (search === \"\") {\n      setVisibleCars(cars);\n    }\n\n    if (cars && search !== \"\") {\n      setVisibleCars(cars.filter(each => each.model.startsWith(search)));\n    }\n  }, [search]);\n\n  function fetchData() {\n    setVisibleCars(cars === null || cars === void 0 ? void 0 : cars.slice(0, page + offset));\n    setPage(page + offset);\n\n    if (cars && page > (cars === null || cars === void 0 ? void 0 : cars.length)) {\n      setDisabledInfiniteScroll(true);\n      setPage(cars.length);\n    } else {\n      setDisabledInfiniteScroll(false);\n    }\n  }\n\n  async function searchNext($event) {\n    fetchData();\n    $event.target.complete();\n  }\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonSelect, {\n    style: {\n      width: '40%'\n    },\n    value: filter,\n    placeholder: \"Available?\",\n    onIonChange: e => setFilter(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, toBeAvailable.map(each => /*#__PURE__*/React.createElement(IonSelectOption, {\n    key: each,\n    value: each === \"Yes\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, each))), /*#__PURE__*/React.createElement(IonSearchbar, {\n    style: {\n      width: '50%'\n    },\n    placeholder: \"Search by model\",\n    value: search,\n    debounce: 200,\n    onIonChange: e => {\n      setSearch(e.detail.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(IonChip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    color: status ? \"success\" : \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, status ? \"Online\" : \"Offline\"))))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: fetching,\n    message: \"This might take a moment...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), visibleCars && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, Array.from(visibleCars).filter(each => {\n    if (filter !== undefined) return each.available === filter && each._id !== undefined;\n    return each._id !== undefined;\n  }).map(({\n    _id,\n    model,\n    price,\n    available\n  }) => /*#__PURE__*/React.createElement(Car, {\n    key: _id,\n    _id: _id,\n    model: model,\n    price: price,\n    available: available,\n    onEdit: _id => history.push(`/api/car/${_id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(IonInfiniteScroll, {\n    threshold: \"100px\",\n    disabled: disableInfiniteScroll,\n    onIonInfinite: e => searchNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonInfiniteScrollContent, {\n    loadingText: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  })), fetchingError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, fetchingError.message || 'Failed to fetch cars'), /*#__PURE__*/React.createElement(IonFab, {\n    vertical: \"bottom\",\n    horizontal: \"end\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    onClick: () => history.push('/api/car'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(IonFab, {\n    vertical: \"bottom\",\n    horizontal: \"start\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"LOGOUT\")), /*#__PURE__*/React.createElement(IonToast, {\n    isOpen: savedOffline ? true : false,\n    message: \"Your changes will be visible on server when you get back online!\",\n    duration: 2000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })));\n\n  function handleLogout() {\n    log(\"logout\");\n    logout === null || logout === void 0 ? void 0 : logout();\n  }\n};\n\nexport default CarList;","map":{"version":3,"sources":["C:/Users/Andrei Gabor/Desktop/UNI/3rd YEAR/Mobile/Labs/cars-app/src/cars/CarList.tsx"],"names":["IonChip","IonContent","IonFab","IonFabButton","IonHeader","IonIcon","IonInfiniteScroll","IonInfiniteScrollContent","IonItem","IonLabel","IonList","IonLoading","IonPage","IonSearchbar","IonSelect","IonSelectOption","IonToast","IonToolbar","React","useContext","useEffect","useState","CarContext","Car","add","AuthContext","getLogger","Network","log","offset","CarList","history","logout","cars","fetching","fetchingError","disableInfiniteScroll","setDisabledInfiniteScroll","visibleCars","setVisibleCars","page","setPage","filter","setFilter","undefined","search","setSearch","status","setStatus","savedOffline","setSavedOffline","getStatus","then","connected","addListener","toBeAvailable","length","fetchData","console","each","available","model","startsWith","slice","searchNext","$event","target","complete","width","e","detail","value","map","Array","from","_id","price","push","message","handleLogout"],"mappings":"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","sourcesContent":["import { IonChip, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonItem, IonLabel, IonList, IonListHeader, IonLoading, IonPage, IonSearchbar, IonSelect, IonSelectOption, IonToast, IonToolbar } from \"@ionic/react\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect, RouteComponentProps } from \"react-router\";\r\nimport { CarContext } from \"./CarProvider\";\r\nimport Car from \"./Car\";\r\nimport {add} from 'ionicons/icons';\r\nimport { AuthContext } from \"../auth\";\r\nimport { CarProps } from \"./CarProps\";\r\nimport { getLogger } from '../core';\r\nimport {Network} from '@capacitor/core';\r\n\r\nconst log = getLogger('CarList');\r\n\r\nconst offset = 10;\r\n\r\nconst CarList : React.FC<RouteComponentProps> = ({history}) => {\r\n    const { logout } = useContext(AuthContext)\r\n    const {cars, fetching, fetchingError} = useContext(CarContext);\r\n    const [disableInfiniteScroll, setDisabledInfiniteScroll] = useState<boolean>(false);\r\n    const [visibleCars, setVisibleCars] = useState<CarProps[] | undefined>([]);\r\n    const [page, setPage] = useState(offset)\r\n    const [filter, setFilter] = useState<boolean | undefined>(undefined);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [status, setStatus] = useState<boolean>(true);\r\n\r\n    const {savedOffline, setSavedOffline} = useContext(CarContext);\r\n\r\n    Network.getStatus().then(status => setStatus(status.connected));\r\n\r\n    Network.addListener('networkStatusChange', (status) => {\r\n        setStatus(status.connected);\r\n    })\r\n\r\n    const toBeAvailable = [\"Yes\", \"No\"];\r\n\r\n    useEffect(() => {\r\n        if (cars?.length && cars?.length > 0) {\r\n            setPage(offset);\r\n            fetchData();\r\n            console.log(cars);\r\n        }\r\n    }, [cars]);\r\n\r\n    useEffect(() => {\r\n        // if (cars && filter) {\r\n          if (cars) {\r\n            setVisibleCars(cars.filter(each => each.available === filter));\r\n        }\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        if (search === \"\") {\r\n            setVisibleCars(cars);\r\n        }\r\n        if (cars && search !== \"\") {\r\n            setVisibleCars(cars.filter(each => each.model.startsWith(search)));\r\n        }\r\n    }, [search])\r\n\r\n    function fetchData() {\r\n        setVisibleCars(cars?.slice(0, page + offset));\r\n        setPage(page + offset);\r\n        if (cars && page > cars?.length) {\r\n            setDisabledInfiniteScroll(true);\r\n            setPage(cars.length);\r\n        } else {\r\n            setDisabledInfiniteScroll(false);\r\n        }\r\n    }\r\n\r\n    async function searchNext($event: CustomEvent<void>) {\r\n        fetchData();\r\n        ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n    }\r\n    \r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonItem>\r\n                        <IonSelect style={{ width: '40%' }} value={filter} placeholder=\"Available?\" onIonChange={(e) => setFilter(e.detail.value)}>\r\n                            {toBeAvailable.map((each) => (\r\n                                <IonSelectOption key={each} value={each === \"Yes\" ? true : false}>\r\n                                        {each}\r\n                                </IonSelectOption>\r\n                            ))}\r\n                        </IonSelect>\r\n                        <IonSearchbar style={{ width: '50%' }} placeholder=\"Search by model\" value={search} debounce={200} onIonChange={(e) => {\r\n                            setSearch(e.detail.value!);\r\n                        }}>\r\n                        </IonSearchbar>\r\n                        <IonChip>\r\n                        <IonLabel color={status? \"success\" : \"danger\"}>{status? \"Online\" : \"Offline\"}</IonLabel>\r\n                    </IonChip>\r\n                    </IonItem>\r\n                    \r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonLoading isOpen={fetching} message=\"This might take a moment...\"/>\r\n\r\n                {\r\n                    visibleCars &&(\r\n                        \r\n                        <IonList>\r\n                            {Array.from(visibleCars)\r\n                                .filter(each => {\r\n                                    if (filter !== undefined)  \r\n                                        return each.available === filter && each._id !== undefined;\r\n                                    return each._id !== undefined;\r\n                                })\r\n                                .map(({_id, model, price, available}) => \r\n                                <Car key={_id} _id={_id} model={model} price={price} available={available}\r\n                                 onEdit={_id => history.push(`/api/car/${_id}`)} />)}\r\n                        </IonList>\r\n                    )\r\n                }\r\n\r\n                <IonInfiniteScroll threshold=\"100px\" disabled={disableInfiniteScroll} onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>\r\n                    <IonInfiniteScrollContent loadingText=\"Loading...\">\r\n                    </IonInfiniteScrollContent>\r\n                </IonInfiniteScroll>\r\n\r\n                {\r\n                    fetchingError && (\r\n                    <div>{fetchingError.message || 'Failed to fetch cars'}</div>\r\n                    )\r\n                }\r\n\r\n                <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton onClick={() => history.push('/api/car')}>\r\n                        <IonIcon icon={add}/>\r\n                    </IonFabButton>\r\n                </IonFab>\r\n\r\n                <IonFab vertical=\"bottom\" horizontal=\"start\" slot=\"fixed\">\r\n                    <IonFabButton onClick={handleLogout}>\r\n                        LOGOUT\r\n                    </IonFabButton>\r\n                </IonFab>\r\n                <IonToast\r\n                    isOpen={savedOffline ? true : false}\r\n                    message=\"Your changes will be visible on server when you get back online!\"\r\n                    duration={2000}/>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n\r\n    function handleLogout() {\r\n        log(\"logout\");\r\n        logout?.();\r\n    }\r\n};\r\n\r\n\r\nexport default CarList;"]},"metadata":{},"sourceType":"module"}