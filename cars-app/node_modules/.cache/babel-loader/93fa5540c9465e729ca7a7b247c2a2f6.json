{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei Gabor\\\\Desktop\\\\UNI\\\\3rd YEAR\\\\Mobile\\\\Labs\\\\cars-app\\\\src\\\\cars\\\\CarEdit.tsx\";\nimport { IonButton, IonButtons, IonCheckbox, IonContent, IonHeader, IonInput, IonItem, IonItemDivider, IonLabel, IonLoading, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport React, { useEffect } from 'react';\nimport { useContext, useState } from 'react';\nimport { CarContext } from './CarProvider';\nimport { getLogger } from '../core';\nconst log = getLogger('CarEdit');\n\nconst CarEdit = ({\n  history,\n  match\n}) => {\n  const {\n    cars,\n    saving,\n    savingError,\n    saveCar\n  } = useContext(CarContext);\n  const [model, setModel] = useState('');\n  const [price, setPrice] = useState(0);\n  const [available, setAvailable] = useState(false);\n  const [car, setCar] = useState();\n  useEffect(() => {\n    log('useEffect');\n    const routeId = match.params.id || '';\n    const car = cars === null || cars === void 0 ? void 0 : cars.find(it => it._id === routeId);\n    setCar(car);\n\n    if (car) {\n      setModel(car.model);\n      setPrice(car.price);\n      setAvailable(car.available);\n    }\n  }, [match.params.id, cars]);\n\n  const handleSave = () => {\n    const editedCar = car ? { ...car,\n      model,\n      price,\n      available\n    } : {\n      model,\n      price,\n      available\n    };\n    saveCar && saveCar(editedCar).then(() => history.goBack());\n  };\n\n  log('render');\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Model: \"), /*#__PURE__*/React.createElement(IonInput, {\n    value: model,\n    onIonChange: e => setModel(e.detail.value || ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Price($): \"), /*#__PURE__*/React.createElement(IonInput, {\n    value: price,\n    onIonChange: e => {\n      var _e$detail$value;\n\n      return setPrice(+((_e$detail$value = e.detail.value) !== null && _e$detail$value !== void 0 ? _e$detail$value : 0));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Is Available\"), /*#__PURE__*/React.createElement(IonCheckbox, {\n    slot: \"end\",\n    checked: available,\n    onIonChange: e => setAvailable(e.detail.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: saving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), savingError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, savingError.message || 'Failed to save car')));\n}; // const CarEdit: React.FC<CarEditProps> = ({history, match}) => {\n//     const {cars, saving, savingError, saveCar } = useContext(CarContext);\n//     const [model, setModel] = useState('');\n//     const [genre, setGenre] = useState('');\n//     const [startedReading, setstartedReading] = useState('');\n//     const [finishedReading, setfinishedReading] = useState(false);\n//     const [item, setCar] = useState<CarProps>();\n//     useEffect(() => {\n//         log('useEffect');\n//         const routeId = match.params.id || '';\n//         const item = cars?.find(it => it._id === routeId);\n//         setCar(item);\n//         if (item) {\n//             setModel(item.title);\n//             setGenre(item.genre);\n//             setstartedReading(item.startedReading);\n//             setfinishedReading(item.finishedReading);\n//         }\n//     }, [match.params.id, cars]);\n//     const handleSave = () => {\n//         log('entered handleSave');\n//         const editedCar = item ? {...item, title: model, genre, startedReading, finishedReading } : { title: model, genre, startedReading, finishedReading };\n//         console.log(editedCar);\n//         saveCar && saveCar(editedCar).then(() => {history.goBack()});\n//     };\n//      return (\n//      <IonPage>\n//         <IonHeader>\n//             <IonToolbar>\n//                 <IonTitle>Edit car</IonTitle>\n//                 <IonButtons slot=\"end\">\n//                     <IonButton onClick={handleSave}>Save</IonButton>\n//                 </IonButtons>\n//             </IonToolbar>\n//         </IonHeader>\n//         <IonContent>\n//             <IonCar>\n//                 <IonLabel>ID:  </IonLabel>\n//                 <IonInput hidden={item === undefined}  placeholder=\"id\" value={match.params.id} readonly/>\n//             </IonCar>\n//             <IonCar>\n//                 <IonLabel>Title:  </IonLabel>\n//                 <IonInput placeholder=\"title\" value={model} onIonChange={e => setModel(e.detail.value || '')}/>\n//             </IonCar>\n//             <IonCar>\n//                 <IonLabel>Genre:  </IonLabel>\n//                 <IonSelect value={genre} onIonChange={e => setGenre(e.detail.value)}>\n//                     <IonSelectOption value=\"war\">war</IonSelectOption>\n//                     <IonSelectOption value=\"crime\">crime</IonSelectOption>\n//                     <IonSelectOption value=\"drama\">drama</IonSelectOption>\n//                     <IonSelectOption value=\"romance\">romance</IonSelectOption>\n//                     <IonSelectOption value=\"thriller\">thriller</IonSelectOption>\n//                     <IonSelectOption value=\"comedy\">comedy</IonSelectOption>\n//                     <IonSelectOption value=\"fantasy\">fantasy</IonSelectOption>\n//                 </IonSelect>\n//             </IonCar>\n//             <IonCar>\n//                 <IonLabel>Started Reading: </IonLabel>\n//                 <IonDatetime displayFormat=\"DD MMM YYYY\" pickerFormat=\"DD MMM YYYY\" value={startedReading} onBlur={e => setstartedReading((moment(e.target.value).format('DD MMM YYYY')) || moment(new Date()).format('DD MMM YYYY'))}/>\n//             </IonCar>\n//             <IonCar>\n//                 <IonLabel>Finished Reading: </IonLabel>\n//                 <IonToggle checked={finishedReading} onIonChange={e => setfinishedReading(e.detail.checked)}/>\n//             </IonCar>\n//             <IonLoading isOpen={saving}/>\n//             {savingError && (\n//                 <div>{savingError?.message || 'Failed to save car'}</div>\n//             )}\n//         </IonContent>\n//      </IonPage>\n//     );\n// };\n\n\nexport default CarEdit;","map":{"version":3,"sources":["C:/Users/Andrei Gabor/Desktop/UNI/3rd YEAR/Mobile/Labs/cars-app/src/cars/CarEdit.tsx"],"names":["IonButton","IonButtons","IonCheckbox","IonContent","IonHeader","IonInput","IonItem","IonItemDivider","IonLabel","IonLoading","IonPage","IonTitle","IonToolbar","React","useEffect","useContext","useState","CarContext","getLogger","log","CarEdit","history","match","cars","saving","savingError","saveCar","model","setModel","price","setPrice","available","setAvailable","car","setCar","routeId","params","id","find","it","_id","handleSave","editedCar","then","goBack","e","detail","value","checked","message"],"mappings":"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","sourcesContent":["import { IonButton, IonButtons, IonCheckbox, IonContent, IonDatetime, IonHeader, IonInput, IonItem, IonItemDivider, IonLabel, IonLoading, IonPage, IonSelect, IonSelectOption, IonTitle, IonToggle, IonToolbar } from '@ionic/react';\r\nimport React, { useEffect } from 'react';\r\nimport { useContext, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { CarContext } from './CarProvider';\r\nimport { getLogger } from '../core';\r\nimport { CarProps } from './CarProps';\r\nimport moment from 'moment';\r\n\r\nconst log = getLogger('CarEdit');\r\n\r\n\r\ninterface CarEditProps extends RouteComponentProps<{\r\n    id?: string;\r\n}> {}\r\n\r\nconst CarEdit: React.FC<CarEditProps> = ({history, match}) => {\r\n  const {cars, saving, savingError, saveCar} = useContext(CarContext);\r\n  const [model, setModel] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [available, setAvailable] = useState(false);\r\n  const [car, setCar] = useState<CarProps>();\r\n  useEffect(() => {\r\n      log('useEffect');\r\n      const routeId = match.params.id || '';\r\n      const car = cars?.find(it => it._id === routeId);\r\n      setCar(car);\r\n      if (car) {\r\n          setModel(car.model);\r\n          setPrice(car.price);\r\n          setAvailable(car.available);\r\n      }\r\n  }, [match.params.id, cars]);\r\n  const handleSave = () => {\r\n      const editedCar = car ? {...car, model, price, available} : {model, price, available};\r\n      saveCar && saveCar(editedCar).then(() => history.goBack());\r\n  };\r\n  log('render');\r\n  return (\r\n    <IonPage>\r\n    <IonHeader>\r\n        <IonToolbar>\r\n            <IonTitle>Edit</IonTitle>\r\n            <IonButtons slot=\"end\">\r\n                <IonButton onClick={handleSave}>\r\n                    Save\r\n                </IonButton>\r\n            </IonButtons>\r\n        </IonToolbar>\r\n    </IonHeader>\r\n    <IonContent>\r\n        <IonItem>\r\n            <IonLabel slot=\"start\">Model: </IonLabel>\r\n            <IonInput value={model} onIonChange={e => setModel(e.detail.value || '')}/>\r\n        </IonItem>\r\n        <IonItemDivider/>\r\n        <IonItem>\r\n            <IonLabel slot=\"start\">Price($): </IonLabel>\r\n        <IonInput value={price} onIonChange={e => setPrice(+(e.detail.value ?? 0))}/>\r\n        </IonItem>\r\n        <IonItemDivider/>\r\n        <IonItem>\r\n            <IonLabel slot=\"start\">Is Available</IonLabel>\r\n            <IonCheckbox slot=\"end\" checked={available} onIonChange={e => setAvailable(e.detail.checked)}/>\r\n        </IonItem>\r\n        <IonLoading isOpen={saving}/>\r\n        {savingError && (\r\n            <div>{savingError.message || 'Failed to save car'}</div>\r\n        )}\r\n    </IonContent>\r\n</IonPage>\r\n  );\r\n};\r\n\r\n// const CarEdit: React.FC<CarEditProps> = ({history, match}) => {\r\n//     const {cars, saving, savingError, saveCar } = useContext(CarContext);\r\n//     const [model, setModel] = useState('');\r\n//     const [genre, setGenre] = useState('');\r\n//     const [startedReading, setstartedReading] = useState('');\r\n//     const [finishedReading, setfinishedReading] = useState(false);\r\n//     const [item, setCar] = useState<CarProps>();\r\n\r\n//     useEffect(() => {\r\n//         log('useEffect');\r\n//         const routeId = match.params.id || '';\r\n//         const item = cars?.find(it => it._id === routeId);\r\n//         setCar(item);\r\n//         if (item) {\r\n//             setModel(item.title);\r\n//             setGenre(item.genre);\r\n//             setstartedReading(item.startedReading);\r\n//             setfinishedReading(item.finishedReading);\r\n//         }\r\n//     }, [match.params.id, cars]);\r\n\r\n//     const handleSave = () => {\r\n//         log('entered handleSave');\r\n//         const editedCar = item ? {...item, title: model, genre, startedReading, finishedReading } : { title: model, genre, startedReading, finishedReading };\r\n//         console.log(editedCar);\r\n//         saveCar && saveCar(editedCar).then(() => {history.goBack()});\r\n//     };\r\n\r\n//      return (\r\n//      <IonPage>\r\n//         <IonHeader>\r\n//             <IonToolbar>\r\n//                 <IonTitle>Edit car</IonTitle>\r\n//                 <IonButtons slot=\"end\">\r\n//                     <IonButton onClick={handleSave}>Save</IonButton>\r\n//                 </IonButtons>\r\n//             </IonToolbar>\r\n//         </IonHeader>\r\n//         <IonContent>\r\n//             <IonCar>\r\n//                 <IonLabel>ID:  </IonLabel>\r\n//                 <IonInput hidden={item === undefined}  placeholder=\"id\" value={match.params.id} readonly/>\r\n//             </IonCar>\r\n//             <IonCar>\r\n//                 <IonLabel>Title:  </IonLabel>\r\n//                 <IonInput placeholder=\"title\" value={model} onIonChange={e => setModel(e.detail.value || '')}/>\r\n//             </IonCar>\r\n//             <IonCar>\r\n//                 <IonLabel>Genre:  </IonLabel>\r\n//                 <IonSelect value={genre} onIonChange={e => setGenre(e.detail.value)}>\r\n//                     <IonSelectOption value=\"war\">war</IonSelectOption>\r\n//                     <IonSelectOption value=\"crime\">crime</IonSelectOption>\r\n//                     <IonSelectOption value=\"drama\">drama</IonSelectOption>\r\n//                     <IonSelectOption value=\"romance\">romance</IonSelectOption>\r\n//                     <IonSelectOption value=\"thriller\">thriller</IonSelectOption>\r\n//                     <IonSelectOption value=\"comedy\">comedy</IonSelectOption>\r\n//                     <IonSelectOption value=\"fantasy\">fantasy</IonSelectOption>\r\n//                 </IonSelect>\r\n                \r\n//             </IonCar>\r\n//             <IonCar>\r\n//                 <IonLabel>Started Reading: </IonLabel>\r\n//                 <IonDatetime displayFormat=\"DD MMM YYYY\" pickerFormat=\"DD MMM YYYY\" value={startedReading} onBlur={e => setstartedReading((moment(e.target.value).format('DD MMM YYYY')) || moment(new Date()).format('DD MMM YYYY'))}/>\r\n//             </IonCar>\r\n//             <IonCar>\r\n//                 <IonLabel>Finished Reading: </IonLabel>\r\n//                 <IonToggle checked={finishedReading} onIonChange={e => setfinishedReading(e.detail.checked)}/>\r\n//             </IonCar>\r\n//             <IonLoading isOpen={saving}/>\r\n//             {savingError && (\r\n//                 <div>{savingError?.message || 'Failed to save car'}</div>\r\n//             )}\r\n//         </IonContent>\r\n//      </IonPage>\r\n//     );\r\n// };\r\n\r\n\r\nexport default CarEdit;"]},"metadata":{},"sourceType":"module"}